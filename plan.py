########################################################### -- Мелкие задачи

# ✅ ⛔️ ⚠️

# 1. ✅ При Редактировании данных, вставить данные в форму (Готово)
# 2. ✅ Кнопка Добавить телефон не нужна (Готово)
# 3. ✅ При сохранении телефона в Бд надо сделать рефреш Таблицы (Готово)
# 4. ✅ Скрыть кнопку "Очистить" когда форма в режыме редактирования (Готово)
# 5. ✅ Таблица убрать текст Лейбла (Готово)
# 6. ✅ Форма утрать текст Формы, там где Добавления или редактирование, заменить на Виджет текста (Готово)
# 7. ✅ Очистка формы, и остановлниея плейсхоледра (Готово)
# 8. ⛔️ При редактировании формы, отобраать дату добавления телефона (Отказался)
# 9. ⛔️ При выходе с режыа редактирования скрыть дату редактирования телефона (Отказался)
# 10.✅ Реализовать и задизайник виджет Toast
# 11.✅ Проставить выходы Toast на важные дейстия, запили и редактирования записей
# 12.✅ Добавить иконок для заголовка таблицы Телефонов 
# 13.✅ Скачать и установить иконки для трех кнопок, Скопировать, Редактировать, Удалить, ссылки сохранены в классе кнопок 
# 13.✅ Подготовить таблицу БД для Емеил данных 
# 14.✅ Настроить пустую структуру для Емаил (Страница емеил) 
# 15.✅ Настроить форму добавления email 
# 16.✅ Настроить Таблицу отображения Email
# 17.⚠️ Валидатор email формы (Валидация телефона, двух почт) 
# 18.⛔️ При редактировании и сохранении данных, выделения пропадает а кнопки таблицы активные и запоминают последнее действие, надо деактивировать
#           - ⛔️При удалении записи унопка Удаления не активная / Почемуто не работает, деактивировать кнопку не получаеться, в нех храняться удаленные данные, думаю проблема в кол беке
#           --- Что ты передаем функцю с параметром, который может быть удален, пример, при выборе елеента, и запуске кол бека на удаления телефона он удалеться, но уже есть кол бек на копирование данных и также самое с редактированием данных
#           --- Можно сделать какой то статус, что после удаления, статус меняеться, и действия удалить и редактировать не удоступные (не получилось, я просто деактивирую меню при любом наджатии кнопки)
#           - ✅ При копировании записи кнопка остаеться активная
#           - ✅ Когра сохраняеться отредактированная запись, кнопки все не активные
# 19.✅ Для Email отредактировать шырину колонок
# 20.✅ Для Email установить иконки таблицы
# 21.✅ Создать таблицу БД и подготовить класса для таблицы "Прочее" где будут все логины и пароли для всех остальных сайтов
# 22.✅ Создать страницу и и настроить отображения в меню
# 23.✅ Настроить форму ввода для "Другое"
# 24.✅ Настроить таблицу "Другое"
# 25.⚠️ Отредактировать иконки для таблицы "Другое"
# 26.⚠️ Виджет, который отобрадаеться в рамке, и показывает заголовок и показывает количество, будет виджет отображения количество паролей в каждой таблице
# 27.⚠️ Создать главную страницу, которая будет отображаться Виджеты которые показывают заполненость паролями (Выше виджет)
# 28.⚠️ Страница Генерации пароля, где можно указать настройки, длину пароля, использоваемые символы, степерь безопасности, время подбора
# 29.⚠️ Страница Експорта в друх Вариантах, в ексель и в Текстовый документ
# 30.⚠️ 
# 25.⚠️ 
# 25.⚠️ 
# 25.⚠️ 
# 25.⚠️ 
# 25.⚠️ 










































#№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№
#есть такая штука Toasts можно сделать ее в упаковать ее в класс и вызывать когда надо, 
##что бы она отображалась по стандарту, снизу справа на 4 секунды и пропадала 
import tkinter as tk
from threading import Timer

class Toast(tk.Toplevel):
    def __init__(self, parent, message, duration=4, **kwargs):
        super().__init__(parent)
        self.message = message
        self.duration = duration

        # Настройки окна Toast
        self.overrideredirect(True)  # Убираем стандартные границы окна
        self.attributes("-topmost", True)  # Поверх всех окон
        self.config(bg="black")  # Цвет фона
        self.geometry(f"+{self.winfo_screenwidth() - 250}+{self.winfo_screenheight() - 100}")  # Расположить внизу справа

        # Добавляем текстовое сообщение
        label = tk.Label(self, text=self.message, fg="white", bg="black", padx=10, pady=5, font=("Arial", 12))
        label.pack()

        # Таймер для автоматического закрытия через 4 секунды
        self.after(self.duration * 1000, self.destroy)

# Пример использования
root = tk.Tk()
root.withdraw()  # Скрыть основное окно

def show_toast():
    toast = Toast(root, "Это тестовое сообщение!")  # Создаем новый Toast

button = tk.Button(root, text="Показать Toast", command=show_toast)
button.pack(pady=20)

root.deiconify()  # Отобразить окно для примера
root.mainloop()

#№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№


